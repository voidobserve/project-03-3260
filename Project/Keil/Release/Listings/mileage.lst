C51 COMPILER V9.60.7.0   MILEAGE                                                           11/08/2024 16:31:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MILEAGE
OBJECT MODULE PLACED IN .\Release\Objects\mileage.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\mileage.c LARGE OPTIMIZE(8,SIZE) BROWSE INTVECTOR(0X000C) INC
                    -DIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Lis
                    -tings\mileage.lst) OBJECT(.\Release\Objects\mileage.obj)

line level    source

   1          // Àï³Ì±íµÄÔ´³ÌÐò
   2          #include "mileage.h"
   3          
   4          
   5          // ×ÜÀï³ÌÉ¨Ãè
   6          void mileage_scan(void)
   7          {
   8   1      #ifdef INTERNATIONAL // ¹«ÖÆµ¥Î»
   9   1      
  10   1          static u32 old_total_mileage = 0;    // ÓÃÀ´¼ÇÂ¼¾ÉµÄ´ó¼ÆÀï³ÌµÄ±äÁ¿
  11   1          static u32 old_subtotal_mileage = 0; // ÓÃÀ´¼ÇÂ¼¾ÉµÄÐ¡¼ÆÀï³ÌµÄ±äÁ¿
  12   1      
  13   1          static bit tmr_is_open = 0; // ¶¨Ê±Æ÷ÊÇ·ñ´ò¿ªµÄ±êÖ¾Î»
  14   1      
  15   1          if (0 == tmr_is_open)
  16   1          {
  17   2              tmr_is_open = 1;
  18   2              tmr3_cnt = 0;
  19   2              tmr3_enable();
  20   2          }
  21   1      
  22   1          if (tmr3_cnt >= 3000)
  23   1          {
  24   2              // Ã¿30s½«´ó¼ÆÀï³ÌºÍÐ¡¼ÆÀï³ÌÐ´Èëflash
  25   2              tmr3_disable();
  26   2              tmr3_cnt = 0;
  27   2              tmr_is_open = 0;
  28   2      
  29   2              flash_write(0x00, (u8 *)&fun_info, sizeof(fun_info));
  30   2          }
  31   1      
  32   1          if (distance >= 1000)
  33   1          {
  34   2              // Èç¹û×ß¹ýµÄ¾àÀë³¬¹ýÁË1m£¬ÔÙ½øÐÐ±£´æ
  35   2              fun_info.total_mileage += distance / 1000;    // ½«ºÁÃ××ª»»³ÉÃ×£¬ÔÙ±£´æ
  36   2              fun_info.subtotal_mileage += distance / 1000; // ½«ºÁÃ××ª»»³ÉÃ×£¬ÔÙ±£´æ
  37   2              distance %= 1000;                                 // Ê£ÏÂµÄ¡¢Î´±£´æµÄ¡¢²»Âú1mµÄÊý¾ÝÁôµ½ÏÂÒ»´ÎµÄ±£´
             -æ
  38   2          }
  39   1      
  40   1          if ((fun_info.total_mileage - old_total_mileage) > 100)
  41   1          {
  42   2              // Èç¹û´ó¼ÆÀï³ÌÓÐ±ä»¯ÇÒ³¬¹ýÁË100m
  43   2              old_total_mileage = fun_info.total_mileage; // ¼ÇÂ¼¾ÉµÄÀï³Ì
  44   2      
  45   2              // printf("total mileage: %lum\n", fun_info.total_mileage);
  46   2      
  47   2              {
  48   3                  // ·¢ËÍÊý¾ÝµÄ²Ù×÷£¬¿ÉÒÔÏÈÖÃ±êÖ¾Î»
  49   3                  // Òª×¢Òâ·¢ËÍµÄÊÇÎåÎ»µÄÕûÊý¡¢Ò»Î»µÄÐ¡Êý¡¢µ¥Î»ÎªKMµÄÊý¾Ý
  50   3                  flag_get_total_mileage = 1;
  51   3              }
  52   2          }
C51 COMPILER V9.60.7.0   MILEAGE                                                           11/08/2024 16:31:55 PAGE 2   

  53   1      
  54   1          if ((fun_info.subtotal_mileage - old_subtotal_mileage) > 1000)
  55   1          {
  56   2              // Èç¹ûÐ¡¼ÆÀï³ÌÓÐ±ä»¯ÇÒ³¬¹ýÁË1000m
  57   2              old_subtotal_mileage = fun_info.subtotal_mileage; // ¼ÇÂ¼¾ÉµÄÀï³Ì
  58   2      
  59   2              // printf("subtotal mileage: %lum\n", fun_info.subtotal_mileage);
  60   2      
  61   2              {
  62   3                  // ·¢ËÍÊý¾ÝµÄ²Ù×÷£¬¿ÉÒÔÏÈÖÃ±êÖ¾Î»
  63   3                  // Òª×¢Òâ·¢ËÍµÄÊÇËÄÎ»µÄ¡¢µ¥Î»ÎªKMµÄÊý¾Ý
  64   3                  flag_get_sub_total_mileage = 1;
  65   3              }
  66   2          }
  67   1      
  68   1      #endif // INTERNATIONAL ¹«ÖÆµ¥Î»
  69   1      
  70   1      #ifdef IMPERIAL // Ó¢ÖÆµ¥Î»
              
                  static u32 old_total_mileage = 0;    // ÓÃÀ´¼ÇÂ¼¾ÉµÄ´ó¼ÆÀï³ÌµÄ±äÁ¿
                  static u32 old_subtotal_mileage = 0; // ÓÃÀ´¼ÇÂ¼¾ÉµÄÐ¡¼ÆÀï³ÌµÄ±äÁ¿
              
                  static bit tmr_is_open = 0; // ¶¨Ê±Æ÷ÊÇ·ñ´ò¿ªµÄ±êÖ¾Î»
              
                  if (0 == tmr_is_open)
                  {
                      tmr_is_open = 1;
                      tmr3_cnt = 0;
                      tmr3_enable();
                  }
              
                  if (tmr3_cnt >= 3000)
                  {
                      // Ã¿30s½«´ó¼ÆÀï³ÌºÍÐ¡¼ÆÀï³ÌÐ´Èëflash
                      tmr3_disable();
                      tmr3_cnt = 0;
                      tmr_is_open = 0;
              
                      flash_write(0x00, (u8 *)&fun_info, sizeof(fun_info));
                  }
              
                  if (distance >= 1000)
                  {
                      // Èç¹û×ß¹ýµÄ¾àÀë³¬¹ýÁË1m£¬ÔÙ½øÐÐ±£´æ
                      fun_info.total_mileage += distance / 1000;    // ½«ºÁÃ××ª»»³ÉÃ×£¬ÔÙ±£´æ
                      fun_info.subtotal_mileage += distance / 1000; // ½«ºÁÃ××ª»»³ÉÃ×£¬ÔÙ±£´æ
                      distance %= 1000;                                 // Ê£ÏÂµÄ¡¢Î´±£´æµÄ¡¢²»Âú1mµÄÊý¾ÝÁôµ½ÏÂÒ»´ÎµÄ±£´
             -æ
                  }
              
                  if ((fun_info.total_mileage - old_total_mileage) > 161)
                  {
                      // Èç¹û´ó¼ÆÀï³ÌÓÐ±ä»¯ÇÒ³¬¹ýÁË161m£¬Ô¼0.1Ó¢Àï
                      old_total_mileage = fun_info.total_mileage; // ¼ÇÂ¼¾ÉµÄÀï³Ì
              
                      // printf("total mileage: %lum\n", fun_info.total_mileage);
              
                      {
                          // ·¢ËÍÊý¾ÝµÄ²Ù×÷£¬¿ÉÒÔÏÈÖÃ±êÖ¾Î»
                          // Òª×¢Òâ·¢ËÍµÄÊÇÎåÎ»µÄÕûÊý¡¢Ò»Î»µÄÐ¡Êý¡¢µ¥Î»ÎªÓ¢ÀïµÄÊý¾Ý
              
                          flag_get_total_mileage = 1;
C51 COMPILER V9.60.7.0   MILEAGE                                                           11/08/2024 16:31:55 PAGE 3   

                      }
                  }
              
                  if ((fun_info.subtotal_mileage - old_subtotal_mileage) > 1610)
                  {
                      // Èç¹ûÐ¡¼ÆÀï³ÌÓÐ±ä»¯ÇÒ³¬¹ýÁË1610m£¬Ô¼1Ó¢Àï
                      old_subtotal_mileage = fun_info.subtotal_mileage; // ¼ÇÂ¼¾ÉµÄÀï³Ì
              
                      // printf("subtotal mileage: %lum\n", fun_info.subtotal_mileage);
              
                      {
                          // ·¢ËÍÊý¾ÝµÄ²Ù×÷£¬¿ÉÒÔÏÈÖÃ±êÖ¾Î»
                          // Òª×¢Òâ·¢ËÍµÄÊÇËÄÎ»µÄ¡¢µ¥Î»ÎªÓ¢ÀïµÄÊý¾Ý
                          flag_get_sub_total_mileage = 1;
                      }
                  }
              
              #endif // IMPERIAL Ó¢ÖÆµ¥Î»
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    296    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.7.0   PIN_LEVEL_SCAN                                                    11/08/2024 16:31:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PIN_LEVEL_SCAN
OBJECT MODULE PLACED IN .\Release\Objects\pin_level_scan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\pin_level_scan.c LARGE OPTIMIZE(8,SIZE) BROWSE INTVECTOR(0X00
                    -0C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Rele
                    -ase\Listings\pin_level_scan.lst) OBJECT(.\Release\Objects\pin_level_scan.obj)

line level    source

   1          #include "pin_level_scan.h"
   2          
   3          void pin_level_scan_config(void)
   4          {
   5   1          p21_input_config(); // 远光灯状态对应的引脚
   6   1          p22_input_config(); // 右转向灯状态对应的引脚
   7   1          p23_input_config(); // 刹车状态对应的引脚
   8   1          p25_input_config(); // 左转向灯状态对应的引脚
   9   1      
  10   1          p30_input_config(); // 6档对应的引脚
  11   1          p27_input_config(); // 5档对应的引脚
  12   1          p14_input_config(); // 4档对应的引脚
  13   1          p13_input_config(); // 3档对应的引脚
  14   1          p10_input_config(); // 2档对应的引脚
  15   1          p07_input_config(); // 1档对应的引脚
  16   1          p06_input_config(); // 空挡对应的引脚
  17   1      }
  18          
  19          // 引脚电平扫描，都是低电平有效
  20          void pin_level_scan(void)
  21          {
  22   1          if (P23 == 0)
  23   1          {
  24   2              // 如果 刹车
  25   2      
  26   2              // printf("P23 == 0\n");
  27   2              if (OFF == fun_info.brake)
  28   2              {
  29   3                  // 如果之前刹车是关闭的
  30   3                  flag_get_brake = 1;
  31   3                  fun_info.brake = ON;
  32   3              }
  33   2              else
  34   2              {
  35   3                  // 如果刹车在上一次扫描时就是开启的
  36   3                  // 不用更新状态
  37   3              }
  38   2          }
  39   1          else
  40   1          {
  41   2              // 如果现在刹车是关闭的，看看上一次扫描时刹车是否开启，
  42   2              // 如果上一次扫描时是开启的，要发送刹车关闭的信息
  43   2              if (ON == fun_info.brake)
  44   2              {
  45   3                  fun_info.brake = OFF;
  46   3                  flag_get_brake = 1;
  47   3              }
  48   2          }
  49   1      
  50   1          if (P25 == 0)
  51   1          {
  52   2              // 如果 左转向灯开启
  53   2              if (OFF == fun_info.left_turn)
C51 COMPILER V9.60.7.0   PIN_LEVEL_SCAN                                                    11/08/2024 16:31:55 PAGE 2   

  54   2              {
  55   3                  // 如果上一次扫描时远光灯是关闭的
  56   3                  fun_info.left_turn = ON;
  57   3                  flag_get_left_turn = 1;
  58   3              }
  59   2          }
  60   1          else
  61   1          {
  62   2              if (ON == fun_info.left_turn)
  63   2              {
  64   3                  // 如果上一次扫描时远光灯是开启的
  65   3                  fun_info.left_turn = OFF;
  66   3                  flag_get_left_turn = 1;
  67   3              }
  68   2          }
  69   1      
  70   1          if (P22 == 0)
  71   1          {
  72   2              // 如果 右转向灯开启
  73   2              // printf("P22 == 0\n");
  74   2              if (OFF == fun_info.right_turn)
  75   2              {
  76   3                  // 如果上一次扫描时右转向灯是关闭的
  77   3                  fun_info.right_turn = ON;
  78   3                  flag_get_right_turn = 1;
  79   3              }
  80   2          }
  81   1          else
  82   1          {
  83   2              if (ON == fun_info.right_turn)
  84   2              {
  85   3                  // 如果上一次扫描时右转向灯是开启的
  86   3                  fun_info.right_turn = OFF;
  87   3                  flag_get_right_turn = 1;
  88   3              }
  89   2          }
  90   1      
  91   1          if (P21 == 0)
  92   1          {
  93   2              // 如果 远光灯开启
  94   2              // printf("P21 == 0\n");
  95   2      
  96   2              if (OFF == fun_info.high_beam)
  97   2              {
  98   3                  // 如果上一次扫描时远光灯是关闭的
  99   3                  fun_info.high_beam = ON;
 100   3                  flag_get_high_beam = 1;
 101   3              }
 102   2          }
 103   1          else
 104   1          {
 105   2              if (ON == fun_info.high_beam)
 106   2              {
 107   3                  // 如果上一次扫描时远光灯是开启的
 108   3                  fun_info.high_beam = OFF;
 109   3                  flag_get_high_beam = 1;
 110   3              }
 111   2          }
 112   1      
 113   1          // 以最低挡位优先，当最低档有信号时，不管其他挡位的信号，直接以最低档的为主
 114   1          if (0 == P06)
 115   1          {
C51 COMPILER V9.60.7.0   PIN_LEVEL_SCAN                                                    11/08/2024 16:31:55 PAGE 3   

 116   2              if (GEAR_NEUTRAL != fun_info.gear)
 117   2              {
 118   3                  // 如果上一次扫描时的挡位不是空挡
 119   3                  fun_info.gear = GEAR_NEUTRAL;
 120   3                  flag_get_gear = 1;
 121   3              }
 122   2          }
 123   1          else if (0 == P07)
 124   1          {
 125   2              if (GEAR_FIRST != fun_info.gear)
 126   2              {
 127   3                  // 如果上一次扫描时的挡位不是一档
 128   3                  fun_info.gear = GEAR_FIRST;
 129   3                  flag_get_gear = 1;
 130   3              }
 131   2          }
 132   1          else if (0 == P10)
 133   1          {
 134   2              if (GEAR_SECOND != fun_info.gear)
 135   2              {
 136   3                  // 如果上一次扫描时的挡位不是二档
 137   3                  fun_info.gear = GEAR_SECOND;
 138   3                  flag_get_gear = 1;
 139   3              }
 140   2          }
 141   1          else if (0 == P13)
 142   1          {
 143   2              if (GEAR_THIRD != fun_info.gear)
 144   2              {
 145   3                  // 如果上一次扫描时的挡位不是三档
 146   3                  fun_info.gear = GEAR_THIRD;
 147   3                  flag_get_gear = 1;
 148   3              }
 149   2          }
 150   1          else if (0 == P14)
 151   1          {
 152   2              if (GEAR_FOURTH != fun_info.gear)
 153   2              {
 154   3                  // 如果上一次扫描时的挡位不是四档
 155   3                  fun_info.gear = GEAR_FOURTH;
 156   3                  flag_get_gear = 1;
 157   3              }
 158   2          }
 159   1          else if (0 == P27)
 160   1          {
 161   2              if (GEAR_FIFTH != fun_info.gear)
 162   2              {
 163   3                  // 如果上一次扫描时的挡位不是五档
 164   3                  fun_info.gear = GEAR_FIFTH;
 165   3                  flag_get_gear = 1;
 166   3              }
 167   2          }
 168   1          else if (0 == P30)
 169   1          {
 170   2              // printf("P30 == 0\n");
 171   2              if (GEAR_SIXTH != fun_info.gear)
 172   2              {
 173   3                  // 如果上一次扫描时的挡位不是六档
 174   3                  fun_info.gear = GEAR_SIXTH;
 175   3                  flag_get_gear = 1;
 176   3              }
 177   2          }
C51 COMPILER V9.60.7.0   PIN_LEVEL_SCAN                                                    11/08/2024 16:31:55 PAGE 4   

 178   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    232    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
